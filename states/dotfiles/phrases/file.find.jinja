{% macro install(index, source, location=None, managed=False, symlink=False)%}
  {%- if location is none %}
    {%- set location = dotfiles.home %}
  {%- else %}
    {%- set location = macros.abspath(location) %}
  {%- endif %}
  {%- set source = macros.abspath(source) %}
  {%- set source_length = source | length %}

  {%- if (managed and not symlink) or (not managed and symlink) %}
phrase step {{ index }}:
  test.nop: []

    {%- for target in salt['file.find'](source, **kwargs)
        if not salt['file.directory_exists'](target) and target[-4:] not in ['.swp'] and target[-1] != '~' %}
      {%- set name = location ~ target[source_length:] %}
phrase step {{ index }} {{ name }}:
  file.{% if managed %}managed{% else %}symlink{% endif %}:
    - name: '{{ name }}'
    - makedirs: True
      {%- if managed %}
    - source: 'file://{{ target }}'
      {%- else %}
    - target: '{{ target }}'
      {%- endif %}
      {%- if symlink %}
    - user: {{ dotfiles.user or grains.username }}
      {%- endif %}
      {%- if grains.groupname is not none %}
    - group: {{ dotfiles.group or grains.groupname }}
      {%- endif %}
      {%- if managed and managed is mapping %}
        {%- for k, v in managed.items() %}
    - {{ k }}: {{ v | json }}
        {%- endfor %}
      {%- endif %}
      {%- if symlink and symlink is mapping %}
        {%- for k, v in managed.items() %}
    - {{ k }}: {{ v | json }}
        {%- endfor %}
      {%- endif %}
    - require_in:
      - test: phrase step {{ index }}
    {%- endfor %}
  {%- else %}
phrase step {{ index }}:
  test.fail_without_changes:
    - name: eighther managed or symlink, but not both
  {%- endif %}
{%- endmacro %}

{% macro uninstall(index, source, location=None, managed=False, symlink=False)%}
{{ macros.noop(kwargs) -}}
  {%- if location is none %}
    {%- set location = dotfiles.home %}
  {%- else %}
    {%- set location = macros.abspath(location) %}
  {%- endif %}
  {%- set source = macros.abspath(source) %}
  {%- set source_length = source | length %}

  {%- if (managed and not symlink) or (not managed and symlink) %}
phrase step {{ index }}:
  test.nop: []

    {%- for target in salt['file.find'](source, **kwargs)
        if not salt['file.directory_exists'](target) and target[-4:] not in ['.swp'] and target[-1] != '~' %}
      {%- set name = location ~ target[source_length:] %}
phrase step {{ index }} {{ name }}:
  file.absent:
    - name: '{{ name }}'
    {%- endfor %}
  {%- endif %}
{%- endmacro %}
