{%- macro get_value(val, islocation=False) -%}
  {%- if val is list -%}
    {%- load_yaml as value_list %}
      {%- for e in val %} 
- '{{ get_value(e, islocation) }}'
      {%- endfor %}
    {%- endload -%}
{{ value_list | join(';')}}
  {%- else %}
    {%- if islocation -%}
{{ macros.abspath(val) }}
    {%- else -%}
{{ val }}
    {%- endif %}
  {%- endif %}
{%- endmacro %}

{%- macro install(index, name, replace=True, location=None, value=None) -%}
  {%- if location is not none %}
    {%- set value = get_value(location, True) %}
  {%- else %}
    {%- set value = get_value(value) %}
  {% endif %}
  {%- set existing_value = salt['environ.get'](name, default=None) %}
  {%- if value == existing_value or (not replace and existing_value is not none) %}
phrase step {{ index }}:
  test.nop: []
  {%- else %}
phrase step {{ index }}:
  cmd.run:
    - name: |
        setx {{ name }} "{{ value }}"
    {%- for k, v in kwargs.items() %}
    - {{ k }}: {{ v | json }}
    {%- endfor %}
  {%- endif %}
{%- endmacro %}

{%- macro uninstall(index, name) -%}
{{ macros.noop(kwargs) -}}
phrase step {{ index }}:
  cmd.run:
    - name: 'REG delete HKCU\Environment /F /V {{ name }}'
{%- endmacro %}
